This fork is a collection of improvements to Bitcoin Core maintained out of the
master git tree.

== Patch files ==
This patchset is distributed as 7 independent patch files:


=== syslibs ===
Adds options to build Bitcoin Core against system LevelDB and libsecp256k1
libraries (see ./configure --help for usage).

Please note this may be dangerous and make theft from you possible if used with
versions of the libraries which have not been audited to meet the bug-for-bug
compatibility required by Bitcoin's consensus protocol. The patch leaves these
options disabled by default for this reason.

It also adds a pkg-config (.pc) file for libbitcoinconsensus, and options to
disable building bitcoin-cli or bitcoin-tx individually.

See also:

- libbitcoinconsensus: Add pkg-config support
  https://github.com/bitcoin/bitcoin/pull/5334

- Support for building against system LevelDB
  https://github.com/bitcoin/bitcoin/pull/2241

- configure: Add unsupported --with-system-libsecp256k1 configure flag
  https://github.com/bitcoin/bitcoin/pull/5416

- configure: Make it possible to build only one of bitcoin-cli or bitcoin-tx
  https://github.com/bitcoin/bitcoin/pull/5618


=== ljrF ===
This is a collection of functionality improvements:

- Discourage fee sniping with nLockTime
  https://github.com/bitcoin/bitcoin/pull/2340

- Add scriptPubKey field to validateaddress RPC call
  https://github.com/bitcoin/bitcoin/pull/4964

- Use real text rather than image-rendered text for unit selector
  https://github.com/bitcoin/bitcoin/pull/5551

- Qt: Elaborate on signverify message dialog warning
  https://github.com/bitcoin/bitcoin/pull/5144

- Add time offset into getpeerinfo output
  https://github.com/bitcoin/bitcoin/pull/5476

- Add unconfirmed and immature balances to getwalletinfo
  https://github.com/bitcoin/bitcoin/pull/5540

- [Qt] allow unit changes for read-only BitcoinAmountField
  https://github.com/bitcoin/bitcoin/pull/5729

- -acceptnonstdtxn option to skip "non-standard transaction" checks
  https://github.com/bitcoin/bitcoin/pull/559

- Support for Tonal Bitcoin units (ᵇTBC, ˢTBC, and TBC)
  https://github.com/bitcoin/bitcoin/pull/929

- Parse URIs with non-BTC amounts
  https://github.com/bitcoin/bitcoin/pull/553

- Send 'mempool' P2P command at the start of each P2P session
  https://github.com/bitcoin/bitcoin/pull/1918

- Add user interface to set dust limit and filtered addresses
  https://github.com/bitcoin/bitcoin/pull/2383

- Add -onion=noproxy for unproxied *.onion connections
  https://github.com/bitcoin/bitcoin/pull/5298

- Added -whiteconnections=<n> option
  https://github.com/bitcoin/bitcoin/pull/5288


=== 1stclassmsg ===
- Put messaging tools in a tab rather than popup window, if configured with --enable-first-class-messaging
  https://github.com/bitcoin/bitcoin/pull/2014


=== zeromq ===
- Add ZMQ support. Report blocks and transactions via ZMQ.
  https://github.com/bitcoin/bitcoin/pull/5303


=== cpfp ===
This is a policy change that makes mining resolve transaction dependencies when
considering fees. See also:
- CreateNewBlock: Child-pays-for-parent / Add transaction fee later
  https://github.com/bitcoin/bitcoin/pull/1647


=== spamfilter ===
This is a policy change that improves the spam filtering capabilities of Bitcoin
Core, notably including pattern matching for notorious spammer scripts.
Specifically, spam created by the following are identified and ignored:
- BetCoin Dice
- Crazy Horse Battery Staple
- Counterparty (only old spammy encoding, NOT non-spammy encodings)
- Lucky Bit
- Mastercoin
- SatoshiBones
- SatoshiDICE


=== dcmp ===
This is a policy change by Peter Todd that enables multiple data pushes in datacarrier transactions. See also:
- Accept any sequence of PUSHDATAs in OP_RETURN outputs
  https://github.com/bitcoin/bitcoin/pull/5079


== Git access ==
It is also available via git from git://github.com/luke-jr/bitcoin.git in the following branches:
	0.10.x-syslibs
	0.10.x-ljrF (includes syslibs, ljrF, 1stclassmsg, and zeromq)
	0.10.x-ljrP (includes everything)
	minedeps (cpfp)
	spamfilter
